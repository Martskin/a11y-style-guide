// Toggles
//
//  - Toggles use hidden `<input type="checkbox">` elements to change the toggle visual via CSS.
//  - Be sure to include a `for` attribute on the parent `label` element with a value that corresponds to the checkbox `id`.
//  - Make sure you check the contrast of the toggle text against the background (if text is used).
//
// <section data-action="aria-toggle" class="atblock"><h3 class="atblock__title"><a href="#toggle_res">Resources</a></h3><div id="toggle_res" class="atblock__panel"><ul><li><a href="https://github.com/scottaohara/aria-switch-button" target="_blank">ARIA Switch Button</a></li><li><a href="https://inclusive-components.club/toggle-button" target="_blank">Inclusive Components - Toggle Buttons</a></li><li><a href="https://www.w3.org/TR/wai-aria-1.1/#switch" target="_blank">Switch Role (WAI-ARIA)</a></li></ul></div></section>
//
//
//
// <section data-action="aria-toggle" class="atblock"><h3 class="atblock__title"><a href="#toggle_guide">WCAG 2.0 Guidelines</a></h3><div id="toggle_guide" class="atblock__panel guidelines"><p><a href="https://www.w3.org/WAI/WCAG20/quickref/?showtechniques=131#text-equiv-all" target="_blank">1.1.1 Non-text Content</a> - All non-text content that is presented to the user has a text alternative that serves the equivalent purpose (some exceptions). (Level A)<br><br><strong>Note:</strong> If non-text content is pure decoration, is used only for visual formatting, or is not presented to users, then it does not need text alternatives.<br><br><a href="https://www.w3.org/WAI/WCAG20/quickref/#qr-ensure-compat-rsv" target="_blank">4.1.2 Name, Role, Value</a> - For all user interface components (including but not limited to: form elements, links and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set; and notification of changes to these items is available to user agents, including assistive technologies. (Level A)</p></div><div class="markup"></div></section>
//
//
//
// Markup: toggles.twig
//
// Style guide: Forms.toggles

// Import site utilities.
@import '../../global/utils/init';

$switch-size: 30px;
$chrome-default-focus-color: #4D90FE;

.a11-y-check-switch {
  display: inline-block;
  margin: 0 0 20px;

  [type='checkbox'] {
    @include element-invisible();
  }

  span {
    background-color: $color-gallery;
    border: 1px solid $color-manatee;
    border-radius: 3rem;
    display: inline-block;
    height: $switch-size + 4;
    position: relative;
    transition: all .3s linear;
    vertical-align: middle;
    width: $switch-size * 2 + 2;

    &:after {
      background-color: $color-white;
      border: 1px solid $color-manatee;
      content: '';
      display: block;
      border-radius: 50%;
      height: $switch-size;
      left: 1px;
      position: absolute;
      top: calc(50% - #{$switch-size/2});
      transition: all .1s linear;
      width: $switch-size;
    }
  }

  [type='checkbox']:not(:disabled) + span {

    &:hover {
      cursor: pointer;

      &:after {
        border-color: $color-cornflower;
        left: 3px;
      }
    }
  }

  [type='checkbox']:checked + span {

    background-color: $color-cornflower;

    &:after {
      left: $switch-size - 1;
    }

    &:hover {

      &:after {
        left: $switch-size - 2;
      }
    }
  }

  [type='checkbox']:focus + span {

    box-shadow: 0 0 4px 2px $chrome-default-focus-color;
  }

  [type='checkbox']:disabled + span {
    border-color: $color-alto;
    opacity: 0.75;

    &:after {
      border-color: $color-alto;
    }
  }
}
